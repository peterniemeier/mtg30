{"version":3,"sources":["rares.js","duals.js","power.js","components/RaresFound.js","components/MoneySpent.js","components/Statement.js","components/DualsOpened.js","components/PowerOpened.js","components/PacksOpened.js","components/DollarsPerDual.js","components/DollarsPerPower.js","components/Slots.js","App.js","reportWebVitals.js","index.js"],"names":["rares","duals","Set","add","power","RaresFound","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","allCardsFound","raresFound","cards","i","length","card","push","react_default","a","createElement","class","key","Component","MoneySpent","moneySpent","Statement","statement","DualsOpened","dualsOpened","PowerOpened","powerOpened","PacksOpened","packsOpened","DollarsPerDual","dollarsPerDual","DollarsPerPower","dollarsPerPower","Slots","_this","pullTheLever","bind","assertThisInitialized","clearState","getPowerNine","getLotus","getAllRares","state","newSpent","powerNine","newDualsFound","newPowerFound","newPackCount","idx","rareIndex","console","log","concat","rare","rareWasDual","rareWasPower","includes","oldCard","getOldBorderCard","newDualCount","newPowerCount","newDollarsPerDual","toFixed","newDollarsPerPower","outcome","setState","forceUpdate","allRares","size","has","lotusFound","oldDualCount","oldPowerCount","result","Math","floor","random","isOldBorderedCardRare","_this$state","id","action","method","target","type","name","value","src","border","title","alt","width","height","onClick","components_Statement","components_MoneySpent","components_PacksOpened","components_DualsOpened","components_PowerOpened","components_DollarsPerDual","components_DollarsPerPower","components_RaresFound","App","className","components_Slots","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"gOA8HeA,EA9HD,CACZ,mBACA,eACA,iBACA,aACA,iBACA,WACA,WACA,UACA,QACA,oBACA,cACA,iBACA,WACA,cACA,YACA,YACA,kBACA,aACA,gBACA,iBACA,YACA,iBACA,aACA,qBACA,cACA,aACA,iBACA,YACA,WACA,aACA,kBACA,OACA,YACA,eACA,oBACA,cACA,mBACA,kBACA,eACA,mBACA,mBACA,gBACA,gBACA,cACA,QACA,OACA,WACA,kBACA,eACA,mBACA,kBACA,eACA,iBACA,YACA,aACA,aACA,aACA,YACA,aACA,cACA,UACA,YACA,WACA,eACA,oBACA,gBACA,oBACA,YACA,mBACA,uBACA,cACA,UACA,cACA,WACA,eACA,iBACA,gBACA,aACA,qBACA,iBACA,WACA,iBACA,YACA,cACA,gBACA,kBACA,QACA,SACA,qBACA,QACA,WACA,cACA,gBACA,cACA,aACA,YACA,kBACA,SACA,6BACA,kBACA,uBACA,uBACA,oBACA,oBACA,kBACA,gBACA,MACA,mBACA,mBACA,aACA,kBACA,eACA,gBACA,kBACA,SACA,kBACA,UACA,QACA,WACA,WACA,YACA,kBACA,SC3HIC,EAAQ,IAAIC,IAClBD,EAAME,IAAI,mBACVF,EAAME,IAAI,UACVF,EAAME,IAAI,mBACVF,EAAME,IAAI,WACVF,EAAME,IAAI,SACVF,EAAME,IAAI,YACVF,EAAME,IAAI,YACVF,EAAME,IAAI,aACVF,EAAME,IAAI,mBACVF,EAAME,IAAI,SAEKF,QCZTG,EAAQ,IAAIF,IAClBE,EAAMD,IAAI,oBACVC,EAAMD,IAAI,eACVC,EAAMD,IAAI,eACVC,EAAMD,IAAI,WACVC,EAAMD,IAAI,aACVC,EAAMD,IAAI,YACVC,EAAMD,IAAI,gBACVC,EAAMD,IAAI,eACVC,EAAMD,IAAI,aAEKC,QCeAC,cArBX,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACZH,0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","file":"static/js/main.bc03b62c.chunk.js","sourcesContent":["const rares = [\n  \"Ancestral Recall\",\n  \"Animate Wall\",\n  \"Ankh of Mishra\",\n  \"Armageddon\",\n  \"Aspect of Wolf\",\n  \"Badlands\",\n  \"Bad Moon\",\n  \"Balance\",\n  \"Bayou\",\n  \"Birds of Paradise\",\n  \"Black Lotus\",\n  \"Blaze of Glory\",\n  \"Blessing\",\n  \"Braingeyser\",\n  \"Chaoslace\",\n  \"Chaos Orb\",\n  \"Clockwork Beast\",\n  \"Cockatrice\",\n  \"Copy Artifact\",\n  \"Cyclopean Tomb\",\n  \"Deathlace\",\n  \"Demonic Hordes\",\n  \"Dingus Egg\",\n  \"Disrupting Scepter\",\n  \"Drain Power\",\n  \"Earthquake\",\n  \"Elvish Archers\",\n  \"Farmstead\",\n  \"Fastbond\",\n  \"Forcefield\",\n  \"Force of Nature\",\n  \"Fork\",\n  \"Fungusaur\",\n  \"Gaea's Liege\",\n  \"Gauntlet of Might\",\n  \"Goblin King\",\n  \"Granite Gargoyle\",\n  \"Helm of Chatzuk\",\n  \"Howling Mine\",\n  \"Illusionary Mask\",\n  \"Island Sanctuary\",\n  \"Jade Monolith\",\n  \"Jayemdae Tome\",\n  \"Kormus Bell\",\n  \"Kudzu\",\n  \"Lich\",\n  \"Lifelace\",\n  \"Living Artifact\",\n  \"Living Lands\",\n  \"Lord of Atlantis\",\n  \"Lord of the Pit\",\n  \"Magical Hack\",\n  \"Mahamoti Djinn\",\n  \"Manabarbs\",\n  \"Mana Flare\",\n  \"Mana Short\",\n  \"Mana Vault\",\n  \"Meekstone\",\n  \"Mind Twist\",\n  \"Mox Emerald\",\n  \"Mox Jet\",\n  \"Mox Pearl\",\n  \"Mox Ruby\",\n  \"Mox Sapphire\",\n  \"Natural Selection\",\n  \"Nether Shadow\",\n  \"Nevinyrral's Disk\",\n  \"Nightmare\",\n  \"Northern Paladin\",\n  \"Personal Incarnation\",\n  \"Pirate Ship\",\n  \"Plateau\",\n  \"Power Surge\",\n  \"Purelace\",\n  \"Raging River\",\n  \"Reverse Damage\",\n  \"Righteousness\",\n  \"Rock Hydra\",\n  \"Roc of Kher Ridges\",\n  \"Royal Assassin\",\n  \"Savannah\",\n  \"Savannah Lions\",\n  \"Scrubland\",\n  \"Sedge Troll\",\n  \"Shivan Dragon\",\n  \"Sleight of Mind\",\n  \"Smoke\",\n  \"Stasis\",\n  \"Sunglasses of Urza\",\n  \"Taiga\",\n  \"The Hive\",\n  \"Thoughtlace\",\n  \"Timber Wolves\",\n  \"Timetwister\",\n  \"Time Vault\",\n  \"Time Walk\",\n  \"Tropical Island\",\n  \"Tundra\",\n  \"Two-Headed Giant of Foriys\",\n  \"Underground Sea\",\n  \"Verduran Enchantress\",\n  \"Vesuvan Doppelganger\",\n  \"Veteran Bodyguard\",\n  \"Volcanic Eruption\",\n  \"Volcanic Island\",\n  \"Warp Artifact\",\n  \"Web\",\n  \"Wheel of Fortune\",\n  \"Will-o'-the-Wisp\",\n  \"Winter Orb\",\n  \"Word of Command\",\n  \"Wrath of God\",\n  \"Zombie Master\",\n  \"Tropical Island\",\n  \"Tundra\",\n  \"Volcanic Island\",\n  \"Plateau\",\n  \"Bayou\",\n  \"Badlands\",\n  \"Savannah\",\n  \"Scrubland\",\n  \"Underground Sea\",\n  \"Taiga\"\n];\n\nexport default rares;\n","const duals = new Set();\nduals.add(\"Tropical Island\");\nduals.add(\"Tundra\");\nduals.add(\"Volcanic Island\");\nduals.add(\"Plateau\");\nduals.add(\"Bayou\");\nduals.add(\"Badlands\");\nduals.add(\"Savannah\");\nduals.add(\"Scrubland\");\nduals.add(\"Underground Sea\");\nduals.add(\"Taiga\");\n\nexport default duals;\n","const power = new Set();\npower.add(\"Ancestral Recall\");\npower.add(\"Black Lotus\");\npower.add(\"Mox Emerald\");\npower.add(\"Mox Jet\");\npower.add(\"Mox Pearl\");\npower.add(\"Mox Ruby\");\npower.add(\"Mox Sapphire\");\npower.add(\"Timetwister\");\npower.add(\"Time Walk\");\n\nexport default power;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass RaresFound extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n      const allCardsFound = this.props.raresFound;\n      const cards = [];\n      for (let i = 0; i < allCardsFound.length; i++) {\n        const card = allCardsFound[allCardsFound.length - i - 1];\n        cards.push(<li class=\"individualCard\" key={i}>{card}</li>);\n      }\n        return (\n          <div>\n            <div class=\"raresFound\">\n              Rares Cracked:\n              {cards}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default RaresFound;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass MoneySpent extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"moneySpent\">\n              Money spent on product: ${this.props.moneySpent}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default MoneySpent;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass Statement extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"statement\">\n              {this.props.statement}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Statement;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass DualsOpened extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"dualsOpened\">\n              Total duals opened: {this.props.dualsOpened}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default DualsOpened;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass PowerOpened extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"powerOpened\">\n              Total power opened: {this.props.powerOpened}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default PowerOpened;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass PacksOpened extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"packsOpened\">\n              Total packs opened: {this.props.packsOpened}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default PacksOpened;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass DollarsPerDual extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"dollarsPerDual\">\n              Dollars spent per dual: ${this.props.dollarsPerDual}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default DollarsPerDual;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass DollarsPerPower extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n    render() {\n        return (\n          <div>\n            <div class=\"dollarsPerPower\">\n              Dollars spent per power: ${this.props.dollarsPerPower}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default DollarsPerPower;\n","import React, { Component } from 'react';\nimport rares from '../rares.js';\nimport duals from '../duals.js';\nimport power from '../power.js';\nimport RaresFound from './RaresFound.js';\nimport MoneySpent from './MoneySpent.js';\nimport Statement from './Statement.js';\nimport DualsOpened from './DualsOpened.js';\nimport PowerOpened from './PowerOpened.js';\nimport PacksOpened from './PacksOpened.js';\nimport DollarsPerDual from './DollarsPerDual.js';\nimport DollarsPerPower from './DollarsPerPower.js';\n\nclass Slots extends Component{\n\n    constructor(props) {\n      super(props);\n      this.pullTheLever = this.pullTheLever.bind(this);\n      this.clearState = this.clearState.bind(this);\n      this.getPowerNine = this.getPowerNine.bind(this);\n      this.getLotus = this.getLotus.bind(this);\n      this.getAllRares = this.getAllRares.bind(this);\n      let raresFound = [];\n      let statement = \"\"\n      let moneySpent = 0;\n      let packsOpened = 0;\n      let dualsOpened = 0;\n      let powerOpened = 0;\n      let dollarsPerDual = dualsOpened === 0 ? \"N/A\" : (dualsOpened / moneySpent);\n      let dollarsPerPower = powerOpened === 0 ? \"N/A\" : (powerOpened / moneySpent);\n      this.state = {\n        statement: statement,\n        raresFound: raresFound,\n        moneySpent: moneySpent,\n        packsOpened: packsOpened,\n        dualsOpened: dualsOpened,\n        powerOpened: powerOpened,\n        dollarsPerDual: dollarsPerDual,\n        dollarsPerPower: dollarsPerPower,\n      };\n    }\n\n    getPowerNine() {\n      this.clearState();\n      let newSpent = 0\n      let powerNine = [];\n      let raresFound = [];\n      let oldDualCount = 0;\n      let oldPowerCount = 0;\n      let newDualsFound = 0;\n      let newPowerFound = 0;\n      let newPackCount = 0;\n      let oldSpent = this.state.packsOpened;\n      while (powerNine.length < 9) {\n        // increment packs opened\n        newPackCount += 4\n\n        // increment money spent\n        newSpent += 999;\n        // Bust 4 packs\n        for (let i = 0; i < 4; i++) {\n          const idx = this.rareIndex();\n          console.log(\"Rare index was \".concat(idx));\n          const rare = rares[idx];\n          // was rare a dual?\n          if (this.rareWasDual(rare)) {\n            newDualsFound++;\n          }\n          // was rare power?\n          if (this.rareWasPower(rare)) {\n            newPowerFound++\n            if (!powerNine.includes(rare)) {\n              powerNine.push(rare);\n            }\n          }\n          raresFound.push(rare);\n          // was old bordered card a dual or power?\n          const oldCard = this.getOldBorderCard();\n          if (oldCard !== null) {\n            if (this.rareWasDual(oldCard)) {\n              newDualsFound++;\n            }\n            if (this.rareWasPower(oldCard)) {\n              newPowerFound++\n              if (!powerNine.includes(rare)) {\n                powerNine.push(rare);\n              }\n            }\n            raresFound.push(oldCard.concat(\": Old Frame\"));\n          }\n        }\n      }\n      const newDualCount = oldDualCount + newDualsFound;\n      const newPowerCount = oldPowerCount + newPowerFound;\n\n      const newDollarsPerDual = (newDualCount === 0 ? \"N/A\" : (newSpent / newDualCount).toFixed(2));\n      const newDollarsPerPower = (newPowerCount === 0 ? \"N/A\" : (newSpent / newPowerCount).toFixed(2));\n      const outcome = \"You spent $\" + newSpent + \" opening \" + newPackCount + \" packs to acquire the power 9.\";\n      this.setState({\n        statement: outcome,\n        raresFound: raresFound,\n        moneySpent: newSpent,\n        packsOpened: newPackCount,\n        dualsOpened: newDualCount,\n        powerOpened: newPowerCount,\n        dollarsPerDual: newDollarsPerDual,\n        dollarsPerPower: newDollarsPerPower\n      });\n      console.log(powerNine);\n      this.forceUpdate();\n    }\n\n    getAllRares() {\n      this.clearState();\n      let newSpent = 0\n      let allRares = new Set();\n      let raresFound = [];\n      let oldDualCount = 0;\n      let oldPowerCount = 0;\n      let newDualsFound = 0;\n      let newPowerFound = 0;\n      let newPackCount = 0;\n      let oldSpent = this.state.packsOpened;\n      while (allRares.size < 113) {\n        console.log(allRares.length + \" Rares discovered\");\n        // increment packs opened\n        newPackCount += 4\n\n        // increment money spent\n        newSpent += 999;\n        // Bust 4 packs\n        for (let i = 0; i < 4; i++) {\n          const idx = this.rareIndex();\n          console.log(\"Rare index was \".concat(idx));\n          const rare = rares[idx];\n          if (!allRares.has(rare)) {\n            allRares.add(rare);\n          }\n          // was rare a dual?\n          if (this.rareWasDual(rare)) {\n            newDualsFound++;\n          }\n          // was rare power?\n          if (this.rareWasPower(rare)) {\n            newPowerFound++\n          }\n          raresFound.push(rare);\n          // was old bordered card a dual or power?\n          const oldCard = this.getOldBorderCard();\n          if (oldCard !== null) {\n            if (this.rareWasDual(oldCard)) {\n              newDualsFound++;\n            }\n            if (this.rareWasPower(oldCard)) {\n              newPowerFound++\n            }\n            raresFound.push(oldCard.concat(\": Old Frame\"));\n          }\n        }\n      }\n      const newDualCount = oldDualCount + newDualsFound;\n      const newPowerCount = oldPowerCount + newPowerFound;\n\n      const newDollarsPerDual = (newDualCount === 0 ? \"N/A\" : (newSpent / newDualCount).toFixed(2));\n      const newDollarsPerPower = (newPowerCount === 0 ? \"N/A\" : (newSpent / newPowerCount).toFixed(2));\n      const outcome = \"You spent $\" + newSpent + \" opening \" + newPackCount + \" packs to acquire all rares.\";\n      this.setState({\n        statement: outcome,\n        raresFound: raresFound,\n        moneySpent: newSpent,\n        packsOpened: newPackCount,\n        dualsOpened: newDualCount,\n        powerOpened: newPowerCount,\n        dollarsPerDual: newDollarsPerDual,\n        dollarsPerPower: newDollarsPerPower\n      });\n      console.log(allRares);\n      this.forceUpdate();\n    }\n\n    getLotus() {\n      this.clearState();\n      let newSpent = 0\n      let raresFound = [];\n      let oldDualCount = 0;\n      let oldPowerCount = 0;\n      let newDualsFound = 0;\n      let newPowerFound = 0;\n      let newPackCount = 0;\n      let oldSpent = this.state.packsOpened;\n      let lotusFound = false;\n      while (!lotusFound) {\n        // increment money spent\n        newSpent = newSpent + 999;\n        // increment packs opened\n        newPackCount += 4\n        // Bust 4 packs\n        for (let i = 0; i < 4; i++) {\n          const idx = this.rareIndex();\n          console.log(\"Rare index was \".concat(idx));\n          const rare = rares[idx];\n          // was rare a dual?\n          if (this.rareWasDual(rare)) {\n            newDualsFound++;\n          }\n          // was rare power?\n          if (this.rareWasPower(rare)) {\n            newPowerFound++\n            if (rare === \"Black Lotus\") {\n              lotusFound = true;\n            }\n          }\n          raresFound.push(rare);\n          // was old bordered card a dual or power?\n          const oldCard = this.getOldBorderCard();\n          if (oldCard !== null) {\n            if (this.rareWasDual(oldCard)) {\n              newDualsFound++;\n            }\n            if (this.rareWasPower(oldCard)) {\n              newPowerFound++\n              if (oldCard === \"Black Lotus\") {\n                lotusFound = true;\n              }\n            }\n            raresFound.push(oldCard.concat(\": Old Frame\"));\n          }\n        }\n      }\n      const newDualCount = oldDualCount + newDualsFound;\n      const newPowerCount = oldPowerCount + newPowerFound;\n\n      const newDollarsPerDual = (newDualCount === 0 ? \"N/A\" : (newSpent / newDualCount).toFixed(2));\n      const newDollarsPerPower = (newPowerCount === 0 ? \"N/A\" : (newSpent / newPowerCount).toFixed(2));\n      const outcome = \"You spent $\" + newSpent + \" opening \" + newPackCount + \" packs to find Black Lotus.\";\n      this.setState({\n        statement: outcome,\n        raresFound: raresFound,\n        moneySpent: newSpent,\n        packsOpened: newPackCount,\n        dualsOpened: newDualCount,\n        powerOpened: newPowerCount,\n        dollarsPerDual: newDollarsPerDual,\n        dollarsPerPower: newDollarsPerPower\n      });\n      this.forceUpdate();\n    }\n\n    pullTheLever() {\n      // increment money spent\n      let oldSpent = this.state.moneySpent;\n      const newSpent = oldSpent + 999;\n      // increment packs opened\n      let oldPackCount = this.state.packsOpened;\n      const newPackCount = oldPackCount + 4;\n\n      // add rares for each pack\n      const raresFound = this.state.raresFound;\n      let oldDualCount = this.state.dualsOpened;\n      let oldPowerCount = this.state.powerOpened;\n      let newDualsFound = 0;\n      let newPowerFound = 0;\n      // Bust 4 packs\n      for (let i = 0; i < 4; i++) {\n        const idx = this.rareIndex();\n        console.log(\"Rare index was \".concat(idx));\n        const rare = rares[idx];\n        // was rare a dual?\n        if (this.rareWasDual(rare)) {\n          newDualsFound++;\n        }\n        // was rare power?\n        if (this.rareWasPower(rare)) {\n          newPowerFound++\n        }\n        raresFound.push(rare);\n        // was old bordered card a dual or power?\n        const oldCard = this.getOldBorderCard();\n        if (oldCard !== null) {\n          if (this.rareWasDual(oldCard)) {\n            newDualsFound++;\n          }\n          if (this.rareWasPower(oldCard)) {\n            newPowerFound++\n          }\n          raresFound.push(oldCard.concat(\": Old Frame\"));\n        }\n      }\n\n      const newDualCount = oldDualCount + newDualsFound;\n      const newPowerCount = oldPowerCount + newPowerFound;\n\n      const newDollarsPerDual = (newDualCount === 0 ? \"N/A\" : (newSpent / newDualCount).toFixed(2));\n      const newDollarsPerPower = (newPowerCount === 0 ? \"N/A\" : (newSpent / newPowerCount).toFixed(2));\n      this.setState({\n        raresFound: raresFound,\n        moneySpent: newSpent,\n        packsOpened: newPackCount,\n        dualsOpened: newDualCount,\n        powerOpened: newPowerCount,\n        dollarsPerDual: newDollarsPerDual,\n        dollarsPerPower: newDollarsPerPower\n      });\n    }\n\n    clearState() {\n      this.setState({\n        statement: \"\",\n        raresFound: [],\n        moneySpent: 0,\n        packsOpened: 0,\n        dualsOpened: 0,\n        powerOpened: 0,\n        dollarsPerDual: \"N/A\",\n        dollarsPerPower: \"N/A\"\n      });\n    }\n\n    isOldBorderedCardRare() {\n      const rng = Math.floor((Math.random() * 10) + 1);\n      let result = false;\n      if (rng < 4) {\n        result = true;\n      }\n      return result;\n    }\n\n    getOldBorderCard() {\n        if (this.isOldBorderedCardRare()) {\n          const idx = this.rareIndex();\n          console.log(\"Old Border index was \".concat(idx));\n          return rares[idx];\n        }\n        return null;\n    }\n\n    rareIndex() {\n      return Math.floor(Math.random() * 122);\n    }\n\n    rareWasDual(rare) {\n      return duals.has(rare);\n    }\n\n    rareWasPower(rare) {\n      return power.has(rare);\n    }\n\n    render() {\n      const {\n        state: {\n          statement,\n          raresFound,\n          moneySpent,\n          packsOpened,\n          dualsOpened,\n          powerOpened,\n          dollarsPerDual,\n          dollarsPerPower\n        }\n      } = this;\n        return (\n          <div>\n          <div id=\"appname\">\n          MTG 30 Simulator\n          </div>\n            <div id=\"widgets\">\n                <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_top\">\n                <input type=\"hidden\" name=\"hosted_button_id\" value=\"JQMDXHFFH9SNL\" />\n                <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\n                <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n                </form>\n            </div>\n            <div id=\"lever\">\n              <input id=\"pullTheLever\" type=\"button\" value=\"Open 4 Packs\" onClick={this.pullTheLever}/>\n            </div>\n            <div id=\"clear\">\n              <input id=\"clearButton\" type=\"button\" value=\"Start Over\" onClick={this.clearState}/>\n            </div>\n            <div id=\"clear\">\n              <input id=\"getPowerNine\" type=\"button\" value=\"Pull until all Power 9 are acquired\" onClick={this.getPowerNine}/>\n            </div>\n            <div id=\"clear\">\n              <input id=\"getLotus\" type=\"button\" value=\"Pull for a Black Lotus\" onClick={this.getLotus}/>\n            </div>\n            <div id=\"clear\">\n              <input id=\"getAllRares\" type=\"button\" value=\"Pull until all Rares collected\" onClick={this.getAllRares}/>\n            </div>\n            <div class=\"slots\">\n            <div class=\"statement\">\n              <Statement statement={statement}/>\n            </div>\n              <div class=\"moneySpent\">\n                <MoneySpent moneySpent={moneySpent}/>\n              </div>\n              <div class=\"packsOpened\">\n                <PacksOpened packsOpened={packsOpened}/>\n              </div>\n              <div class=\"dualsOpened\">\n                <DualsOpened dualsOpened={dualsOpened}/>\n              </div>\n              <div class=\"powerOpened\">\n                <PowerOpened powerOpened={powerOpened}/>\n              </div>\n              <div class=\"dollarsPerDual\">\n                <DollarsPerDual dollarsPerDual={dollarsPerDual}/>\n              </div>\n              <div class=\"dollarsPerPower\">\n                <DollarsPerPower dollarsPerPower={dollarsPerPower}/>\n              </div>\n              <div class=\"raresFound\">\n                <RaresFound raresFound={raresFound}/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Slots;\n","import React from 'react';\nimport Slots from './components/Slots.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"slotsContainer\">\n        <Slots>\n        </Slots>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}